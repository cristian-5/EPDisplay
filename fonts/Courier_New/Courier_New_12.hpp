
#ifndef COURIER_NEW_12_FONT_PURE
#define COURIER_NEW_12_FONT_PURE

#include <avr/pgmspace.h>

#include "../../font.hpp"

const uint8_t Courier_New_12_TABLE[] PROGMEM {
	// UPPERCASE LATIN LETTERS
	0xFF, 0xCF, 0xEF, 0xD7, 0xD7, 0xD7, 0x83, 0xBB, 0x11, 0xFF, 0xFF, 0xFF, // A
	0xFF, 0x07, 0xBB, 0xBB, 0x87, 0xBB, 0xBB, 0xBB, 0x07, 0xFF, 0xFF, 0xFF, // B
	0xFF, 0xC3, 0xBB, 0xBF, 0xBF, 0xBF, 0xBF, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // C
	0xFF, 0x0F, 0xB7, 0xBB, 0xBB, 0xBB, 0xBB, 0xB7, 0x0F, 0xFF, 0xFF, 0xFF, // D
	0xFF, 0x03, 0xBB, 0xAF, 0x8F, 0xAF, 0xBF, 0xBB, 0x03, 0xFF, 0xFF, 0xFF, // E
	0xFF, 0x81, 0xDD, 0xD7, 0xC7, 0xD7, 0xDF, 0xDF, 0x8F, 0xFF, 0xFF, 0xFF, // F
	0xFF, 0xC3, 0xBB, 0xBF, 0xBF, 0xB1, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // G
	0xFF, 0x11, 0xBB, 0xBB, 0x83, 0xBB, 0xBB, 0xBB, 0x11, 0xFF, 0xFF, 0xFF, // H
	0xFF, 0x83, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0x83, 0xFF, 0xFF, 0xFF, // I
	0xFF, 0xC3, 0xF7, 0xF7, 0xF7, 0xB7, 0xB7, 0xB7, 0xCF, 0xFF, 0xFF, 0xFF, // J
	0xFF, 0x11, 0xBB, 0xB7, 0xAF, 0x8F, 0xB7, 0xBB, 0x19, 0xFF, 0xFF, 0xFF, // K
	0xFF, 0x8F, 0xDF, 0xDF, 0xDF, 0xDF, 0xDB, 0xDB, 0x83, 0xFF, 0xFF, 0xFF, // L
	0xFF, 0x11, 0x93, 0x93, 0xAB, 0xAB, 0xBB, 0xBB, 0x11, 0xFF, 0xFF, 0xFF, // M
	0xFF, 0x11, 0x9B, 0x9B, 0xAB, 0xAB, 0xAB, 0xB3, 0x13, 0xFF, 0xFF, 0xFF, // N
	0xFF, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // O
	0xFF, 0x87, 0xDB, 0xDB, 0xDB, 0xC7, 0xDF, 0xDF, 0x8F, 0xFF, 0xFF, 0xFF, // P
	0xFF, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xC7, 0xE3, 0xFF, 0xFF, // Q
	0xFF, 0x07, 0xBB, 0xBB, 0xBB, 0x87, 0xB7, 0xBB, 0x1D, 0xFF, 0xFF, 0xFF, // R
	0xFF, 0xCB, 0xB3, 0xBF, 0xC7, 0xFB, 0xFB, 0x9B, 0xA7, 0xFF, 0xFF, 0xFF, // S
	0xFF, 0x01, 0x6D, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xC7, 0xFF, 0xFF, 0xFF, // T
	0xFF, 0x11, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // U
	0xFF, 0x11, 0xBB, 0xBB, 0xD7, 0xD7, 0xD7, 0xEF, 0xEF, 0xFF, 0xFF, 0xFF, // V
	0xFF, 0x11, 0xBB, 0xBB, 0xAB, 0xAB, 0xAB, 0xAB, 0xD7, 0xFF, 0xFF, 0xFF, // W
	0xFF, 0x39, 0xBB, 0xD7, 0xEF, 0xEF, 0xD7, 0xBB, 0x39, 0xFF, 0xFF, 0xFF, // X
	0xFF, 0x11, 0xBB, 0xD7, 0xD7, 0xEF, 0xEF, 0xEF, 0xC7, 0xFF, 0xFF, 0xFF, // Y
	0xFF, 0x83, 0xBB, 0xF7, 0xEF, 0xEF, 0xDF, 0xBB, 0x83, 0xFF, 0xFF, 0xFF, // Z
	// lowecase LATIN LETTERS
	0xFF, 0xFF, 0xFF, 0xC7, 0xBB, 0xC3, 0xBB, 0xBB, 0xC1, 0xFF, 0xFF, 0xFF, // a
	0xFF, 0x3F, 0xBF, 0xA7, 0x9B, 0xBB, 0xBB, 0xBB, 0x07, 0xFF, 0xFF, 0xFF, // b
	0xFF, 0xFF, 0xFF, 0xC3, 0xBB, 0xBF, 0xBF, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // c
	0xFF, 0xF3, 0xFB, 0xCB, 0xB3, 0xBB, 0xBB, 0xBB, 0xC1, 0xFF, 0xFF, 0xFF, // d
	0xFF, 0xFF, 0xFF, 0xC7, 0xBB, 0x83, 0xBF, 0xBF, 0xC3, 0xFF, 0xFF, 0xFF, // e
	0xFF, 0xE3, 0xDF, 0x83, 0xDF, 0xDF, 0xDF, 0xDF, 0x83, 0xFF, 0xFF, 0xFF, // f
	0xFF, 0xFF, 0xFF, 0xC9, 0xB3, 0xBB, 0xBB, 0xBB, 0xC3, 0xFB, 0xC7, 0xFF, // g
	0xFF, 0x3F, 0xBF, 0xA7, 0x9B, 0xBB, 0xBB, 0xBB, 0x11, 0xFF, 0xFF, 0xFF, // h
	0xFF, 0xEF, 0xFF, 0x8F, 0xEF, 0xEF, 0xEF, 0xEF, 0x83, 0xFF, 0xFF, 0xFF, // i
	0xFF, 0xEF, 0xFF, 0x87, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0xF7, 0x8F, 0xFF, // j
	0xFF, 0x3F, 0xBF, 0xA3, 0xB7, 0x8F, 0xAF, 0xB7, 0x23, 0xFF, 0xFF, 0xFF, // k
	0xFF, 0xCF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0x83, 0xFF, 0xFF, 0xFF, // l
	0xFF, 0xFF, 0xFF, 0x17, 0xAB, 0xAB, 0xAB, 0xAB, 0x01, 0xFF, 0xFF, 0xFF, // m
	0xFF, 0xFF, 0xFF, 0x27, 0x9B, 0xBB, 0xBB, 0xBB, 0x11, 0xFF, 0xFF, 0xFF, // n
	0xFF, 0xFF, 0xFF, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // o
	0xFF, 0xFF, 0xFF, 0x27, 0x9B, 0xBB, 0xBB, 0xBB, 0x87, 0xBF, 0x1F, 0xFF, // p
	0xFF, 0xFF, 0xFF, 0xC9, 0xB3, 0xBB, 0xBB, 0xBB, 0xC3, 0xFB, 0xF1, 0xFF, // q
	0xFF, 0xFF, 0xFF, 0x93, 0xCF, 0xDF, 0xDF, 0xDF, 0x83, 0xFF, 0xFF, 0xFF, // r
	0xFF, 0xFF, 0xFF, 0xC3, 0xBB, 0xC7, 0xFB, 0xBB, 0x87, 0xFF, 0xFF, 0xFF, // s
	0xFF, 0xFF, 0xDF, 0x83, 0xDF, 0xDF, 0xDF, 0xDD, 0xE3, 0xFF, 0xFF, 0xFF, // t
	0xFF, 0xFF, 0xFF, 0x33, 0xBB, 0xBB, 0xBB, 0xB3, 0xC9, 0xFF, 0xFF, 0xFF, // u
	0xFF, 0xFF, 0xFF, 0x11, 0xBB, 0xBB, 0xD7, 0xD7, 0xEF, 0xFF, 0xFF, 0xFF, // v
	0xFF, 0xFF, 0xFF, 0x11, 0xBB, 0xAB, 0xAB, 0xAB, 0xD7, 0xFF, 0xFF, 0xFF, // w
	0xFF, 0xFF, 0xFF, 0x33, 0xB7, 0xCF, 0xCF, 0xB7, 0x33, 0xFF, 0xFF, 0xFF, // x
	0xFF, 0xFF, 0xFF, 0x11, 0xBB, 0xDB, 0xD7, 0xE7, 0xEF, 0xEF, 0x87, 0xFF, // y
	0xFF, 0xFF, 0xFF, 0x83, 0xB7, 0xEF, 0xDF, 0xBB, 0x83, 0xFF, 0xFF, 0xFF, // z
	// SYMBOLS & NUMBERS
	0xFF, 0x93, 0xB7, 0xB7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // "
	0xFF, 0xEB, 0xEB, 0xD7, 0x83, 0xD7, 0x83, 0xD7, 0xAF, 0xAF, 0xFF, 0xFF, // #
	0xFF, 0xEF, 0xC7, 0xBF, 0xBF, 0xC7, 0xB7, 0x8F, 0xEF, 0xEF, 0xFF, 0xFF, // $
	0xFF, 0xDF, 0xAF, 0xDF, 0xF3, 0x8F, 0xF7, 0xEB, 0xF7, 0xFF, 0xFF, 0xFF, // %
	0xFF, 0xFF, 0xFF, 0xE7, 0xDF, 0xDF, 0xAB, 0xB7, 0xCB, 0xFF, 0xFF, 0xFF, // &
	0xFF, 0xEF, 0xEF, 0xEF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // '
	0xFF, 0xFF, 0xE7, 0xDB, 0xFB, 0xF7, 0xEF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, // ?
	0xFF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, // !
	0xFF, 0xEF, 0x83, 0xEF, 0xD7, 0xD7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // *
	0xFF, 0xFF, 0xEF, 0xEF, 0xEF, 0x01, 0xEF, 0xEF, 0xEF, 0xFF, 0xFF, 0xFF, // +
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xEF, 0xCF, 0xDF, 0xFF, // ,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // -
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xCF, 0xFF, 0xFF, 0xFF, // .
	0xFF, 0xFB, 0xFB, 0xF7, 0xF7, 0xEF, 0xEF, 0xDF, 0xDF, 0xBF, 0xFF, 0xFF, // /
	0xFF, 0xC7, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // 0
	0xFF, 0xCF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0x83, 0xFF, 0xFF, 0xFF, // 1
	0xFF, 0xC7, 0xBB, 0xFB, 0xF7, 0xEF, 0xDF, 0xBB, 0x83, 0xFF, 0xFF, 0xFF, // 2
	0xFF, 0xC7, 0xBB, 0xFB, 0xE7, 0xFB, 0xFB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // 3
	0xFF, 0xF3, 0xEB, 0xEB, 0xDB, 0xBB, 0x81, 0xFB, 0xF1, 0xFF, 0xFF, 0xFF, // 4
	0xFF, 0xC3, 0xDF, 0xDF, 0xC7, 0xFB, 0xFB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // 5
	0xFF, 0xE3, 0xDF, 0xBF, 0x87, 0xBB, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // 6
	0xFF, 0x83, 0xBB, 0xFB, 0xF7, 0xF7, 0xF7, 0xEF, 0xEF, 0xFF, 0xFF, 0xFF, // 7
	0xFF, 0xC7, 0xBB, 0xBB, 0xC7, 0xBB, 0xBB, 0xBB, 0xC7, 0xFF, 0xFF, 0xFF, // 8
	0xFF, 0xC7, 0xBB, 0xBB, 0xBB, 0xC3, 0xFB, 0xF7, 0x8F, 0xFF, 0xFF, 0xFF, // 9
	0xFF, 0xFF, 0xFF, 0xCF, 0xCF, 0xFF, 0xFF, 0xCF, 0xCF, 0xFF, 0xFF, 0xFF, // :
	0xFF, 0xFF, 0xFF, 0xE7, 0xE7, 0xFF, 0xFF, 0xE7, 0xCF, 0xDF, 0xFF, 0xFF, // ;
};

font Courier_New_12(Courier_New_12_TABLE, 7, 12);

#endif
